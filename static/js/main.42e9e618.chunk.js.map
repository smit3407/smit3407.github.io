{"version":3,"sources":["pages/home.js","pages/about.js","pages/topics.js","components/appbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","About","Topics","match","useRouteMatch","to","url","path","Topic","topicId","useParams","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","Button","color","component","Link","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,SAASA,IACpB,OAAO,sCCDI,SAASC,IACpB,OAAO,uCCSI,SAASC,IACpB,IAAIC,EAAQC,0BAEZ,OACE,gCACE,wCAEA,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAE,UAAKF,EAAMG,IAAX,eAAR,0BAEF,6BACE,cAAC,IAAD,CAAMD,GAAE,UAAKF,EAAMG,IAAX,kBAAR,iCAUA,eAAC,SAAD,WACA,cAAC,QAAD,CAAOC,KAAI,UAAKJ,EAAMI,KAAX,aAAX,SACE,cAACC,EAAD,MAEF,cAAC,QAAD,CAAOD,KAAMJ,EAAMI,KAAnB,SACE,gEAOd,SAASC,IAAS,IACRC,EAAYC,sBAAZD,QACN,OAAO,sDAAyBA,K,6DCtC9BE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IACtB,IAAMC,EAAUV,IAEhB,OACE,qBAAKW,UAAWD,EAAQP,KAAxB,SACE,cAACS,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYJ,UAAWD,EAAQL,WAA/B,UACE,cAACW,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAMzB,GAAG,IAA5C,kBACA,cAACsB,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAMzB,GAAG,SAA5C,mBACA,cAACsB,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAMzB,GAAG,UAA5C,6BCZG,SAAS0B,IACtB,OACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IAEA,eAAC,SAAD,WACE,cAAC,QAAD,CAAOxB,KAAK,SAASsB,UAAW5B,EAAhC,SACE,cAACA,EAAD,MAEF,cAAC,QAAD,CAAOM,KAAK,UAAUsB,UAAW3B,EAAjC,SACE,cAACA,EAAD,MAEF,cAAC,QAAD,CAAOK,KAAK,IAAIsB,UAAW7B,EAA3B,SACE,cAACA,EAAD,cChCZ,IAYegC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.42e9e618.chunk.js","sourcesContent":["export default function Home() {\r\n    return <h2>Home</h2>;\r\n}","export default function About() {\r\n    return <h2>About</h2>;\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nexport default function Topics() {\r\n    let match = useRouteMatch();\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Topics</h2>\r\n  \r\n        <ul>\r\n          <li>\r\n            <Link to={`${match.url}/components`}>Components</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${match.url}/props-v-state`}>\r\n              Props v. State\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n  \r\n        {/* The Topics page has its own <Switch> with more routes\r\n            that build on the /topics URL path. You can think of the\r\n            2nd <Route> here as an \"index\" page for all topics, or\r\n            the page that is shown when no topic is selected*/}\r\n            <Switch>\r\n            <Route path={`${match.path}/:topicId`}>\r\n              <Topic />\r\n            </Route>\r\n            <Route path={match.path}>\r\n              <h3>Please select a topic.</h3>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      );\r\n}\r\n    \r\nfunction Topic() {\r\n    let { topicId } = useParams();\r\n    return <h3>Requested topic ID: {topicId}</h3>;\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from 'react-router-dom/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.menuButton}>\r\n            <Button color=\"inherit\" component={Link} to='/' >Home</Button>\r\n            <Button color=\"inherit\" component={Link} to='/about' >About</Button>\r\n            <Button color=\"inherit\" component={Link} to='/topics' >Topics</Button>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\n// Pages Import\nimport Home from './pages/home';\nimport About from './pages/about';\nimport Topics from './pages/topics';\n\n// Material UI Appbar\nimport Appbar from './components/appbar';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Appbar />\n\n        <Switch>\n          <Route path=\"/about\" component={About}>\n            <About />\n          </Route>\n          <Route path=\"/topics\" component={Topics}>\n            <Topics />\n          </Route>\n          <Route path=\"/\" component={Home}>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}